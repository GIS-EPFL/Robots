MODULE RRC_Helper_Rob(SYSMODULE)
    !***********************************************************************************
    !
    ! ETH Zurich / Robotic Fabrication Lab
    ! HIB C 13 / Stefano-Franscini-Platz 1
    ! CH-8093 Zurich
    !
    !***********************************************************************************
    !
    ! PROJECT     :  RRC - Rapid Robot Communication
    !
    ! FUNCTION    :  Helper routines for project
    !
    ! AUTHOR      :  Philippe Fleischmann
    !
    ! EMAIL       :  rrc@arch.ethz.ch
    !
    ! HISTORY     :  2019.02.22
    !
    ! Copyright   :  ETH Zurich (CH) 2019
    !                - Philippe Fleischmann
    !                - Michael Lyrenmann
    !                - Gonzalo Casas
    !
    ! License     :  This code base is governed by an EULA (End-User License Agreement)
    !                which you have received together with the software.
    !                You are not allowed to use the software on a real robots
    !                without a signed EULA.
    !
    !                A copy of the EULA content is in the controller task (T_CTRL).
    !
    !***********************************************************************************

    !************************************************
    ! Declaration :     num
    !************************************************
    !
    TASK PERS bool b_RRC_StoJoToArryOn:=FALSE;

    !************************************************
    ! Declaration :     num
    !************************************************
    !
    TASK PERS num n_RRC_ArryPointer:=1;

    !************************************************
    ! Declaration :     jointtarget
    !************************************************
    !
    TASK PERS jointtarget jp_RRC_Arry{51}:=[
    [[-178.155,71.7205,-139.164,9.42305E-06,-22.554,223.157],[9080,-7750,-4400,0,0,0]],
    [[-176.821,72.2054,-141.287,0.000284081,-20.9164,221.819],[9080,-7750,-4400,0,0,0]],
    [[-175.414,72.6147,-143.268,9.42305E-06,-19.3465,220.411],[9080,-7750,-4400,0,0,0]],
    [[-173.945,72.9576,-145.109,0.000284081,-17.8461,218.944],[9080,-7750,-4400,0,0,0]],
    [[-172.414,73.2404,-146.822,-8.21297E-05,-16.4157,217.415],[9080,-7750,-4400,0,0,0]],
    [[-170.819,73.4679,-148.416,-8.21297E-05,-15.0513,215.818],[9080,-7750,-4400,0,0,0]],
    [[-169.155,73.6488,-149.895,9.42305E-06,-13.7544,214.156],[9080,-7750,-4400,0,0,0]],
    [[-167.425,73.7877,-151.265,-0.000173682,-12.5213,212.424],[9080,-7750,-4400,0,0,0]],
    [[-165.624,73.8886,-152.529,9.42305E-06,-11.3601,210.624],[9080,-7750,-4400,0,0,0]],
    [[-163.754,73.958,-153.688,-0.000173682,-10.2651,208.753],[9080,-7750,-4400,0,0,0]],
    [[-161.818,73.9993,-154.757,-8.21297E-05,-9.24482,206.817],[9080,-7750,-4400,0,0,0]],
    [[-159.809,74.0186,-155.724,0.000284081,-8.29295,204.807],[9080,-7750,-4400,0,0,0]],
    [[-157.734,74.0187,-156.598,9.42305E-06,-7.41683,202.733],[9080,-7750,-4400,0,0,0]],
    [[-155.594,74.0147,-157.382,-8.21297E-05,-6.62078,200.593],[9080,-7750,-4400,0,0,0]],
    [[-153.395,73.9815,-158.081,9.42305E-06,-5.90161,198.392],[9080,-7750,-4400,0,0,0]],
    [[-151.135,73.9494,-158.686,-8.21297E-05,-5.26356,196.134],[9080,-7750,-4400,0,0,0]],
    [[-148.823,73.9148,-159.205,0.000192529,-4.70732,193.82],[9080,-7750,-4400,0,0,0]],
    [[-146.463,73.8817,-159.642,-8.21297E-05,-4.23989,191.461],[9080,-7750,-4400,0,0,0]],
    [[-144.065,73.8513,-159.989,9.42305E-06,-3.86011,189.064],[9080,-7750,-4400,0,0,0]],
    [[-141.635,73.8254,-160.258,9.42305E-06,-3.56802,186.629],[9080,-7750,-4400,0,0,0]],
    [[-139.179,73.807,-160.44,9.42305E-06,-3.36782,184.176],[9080,-7750,-4400,0,0,0]],
    [[-136.709,73.7969,-160.539,9.42305E-06,-3.26041,181.706],[9080,-7750,-4400,0,0,0]],
    [[-134.231,73.7952,-160.552,-8.21297E-05,-3.24472,179.229],[9080,-7750,-4400,0,0,0]],
    [[-131.756,73.7966,-160.486,9.42305E-06,-3.31469,176.757],[9080,-7750,-4400,0,0,0]],
    [[-129.295,73.8124,-160.339,9.42305E-06,-3.4827,174.292],[9080,-7750,-4400,0,0,0]],
    [[-126.855,73.8415,-160.099,9.42305E-06,-3.73907,171.854],[9080,-7750,-4400,0,0,0]],
    [[-124.444,73.8694,-159.781,-8.21297E-05,-4.08831,169.442],[9080,-7750,-4400,0,0,0]],
    [[-122.07,73.9026,-159.383,-0.000173682,-4.52278,167.065],[9080,-7750,-4400,0,0,0]],
    [[-119.741,73.938,-158.893,-8.21297E-05,-5.04365,164.738],[9080,-7750,-4400,0,0,0]],
    [[-117.459,73.9686,-158.316,9.42305E-06,-5.65058,162.459],[9080,-7750,-4400,0,0,0]],
    [[-115.235,73.996,-157.659,0.000192529,-6.33955,160.235],[9080,-7750,-4400,0,0,0]],
    [[-113.074,74.0154,-156.909,-0.000173682,-7.1065,158.072],[9080,-7750,-4400,0,0,0]],
    [[-110.973,74.0196,-156.066,-8.21297E-05,-7.95378,155.975],[9080,-7750,-4400,0,0,0]],
    [[-108.94,74.0172,-155.133,9.42305E-06,-8.87596,153.939],[9080,-7750,-4400,0,0,0]],
    [[-106.974,73.979,-154.107,9.42305E-06,-9.86981,151.974],[9080,-7750,-4400,0,0,0]],
    [[-105.079,73.9176,-152.98,9.42305E-06,-10.9358,150.08],[9080,-7750,-4400,0,0,0]],
    [[-103.253,73.8294,-151.76,-8.21297E-05,-12.0724,148.25],[9080,-7750,-4400,0,0,0]],
    [[-101.494,73.7055,-150.431,9.42305E-06,-13.2785,146.495],[9080,-7750,-4400,0,0,0]],
    [[-99.809,73.5413,-148.995,-8.21297E-05,-14.5482,144.806],[9080,-7750,-4400,0,0,0]],
    [[-98.187,73.3321,-147.446,-8.21297E-05,-15.8872,143.184],[9080,-7750,-4400,0,0,0]],
    [[-96.6332,73.0712,-145.78,9.42305E-06,-17.2929,141.633],[9080,-7750,-4400,0,0,0]],
    [[-95.142,72.7516,-143.987,-8.21297E-05,-18.7659,140.141],[9080,-7750,-4400,0,0,0]],
    [[-93.7151,72.3684,-142.062,-8.21297E-05,-20.3089,138.71],[9080,-7750,-4400,0,0,0]],
    [[-92.3445,71.9108,-139.99,0.000192529,-21.9221,137.343],[9080,-7750,-4400,0,0,0]],
    [[-91.0364,71.3757,-137.768,-8.21297E-05,-23.6143,136.033],[9080,-7750,-4400,0,0,0]],
    [[-89.7751,70.7454,-135.359,0.000192529,-25.3872,134.776],[9080,-7750,-4400,0,0,0]],
    [[-88.5757,70.0112,-132.764,-8.21297E-05,-27.2514,133.572],[9080,-7750,-4400,0,0,0]],
    [[-87.4216,69.1557,-129.941,9.42305E-06,-29.2191,132.421],[9080,-7750,-4400,0,0,0]],
    [[-86.3194,68.1587,-126.859,-8.21297E-05,-31.3022,131.317],[9080,-7750,-4400,0,0,0]],
    [[-85.2617,66.984,-123.457,9.42305E-06,-33.5293,130.261],[9080,-7750,-4400,0,0,0]],
    [[-84.242,65.5863,-119.643,9.42305E-06,-35.946,129.244],[9080,-7750,-4400,0,0,0]]
    ];

    !************************************************
    ! Function    :     Store jointtarget in array 
    ! Programmer  :     Philippe Fleischmann
    ! Date        :     2019.02.22
    !***************** ETH Zurich *******************
    !
    PROC r_RRC_StoJoPosInArry()
        !
        ! Made always a fine point 
        WaitRob\InPos;
        !
        ! Increase arry pointer
        Incr n_RRC_ArryPointer;
        !
        ! Read current position
        jp_RRC_Arry{n_RRC_ArryPointer}:=CJointT();
        ! Placehoder for Code
        RETURN ;
    ERROR
        ! Placeholder for Error Code...
    ENDPROC

    !************************************************
    ! Function    :     Store jointtarget in array 
    ! Programmer  :     Philippe Fleischmann
    ! Date        :     2019.02.22
    !***************** ETH Zurich *******************
    !
    PROC r_RRC_ExeJoPosFromArry()
        !
        n_RRC_ArryPointer:=1;
        !
        WHILE n_RRC_ArryPointer<=51 DO
            MoveAbsJ jp_RRC_Arry{n_RRC_ArryPointer},vmax,z200,tool0;
            ! Increase arry pointer
            Incr n_RRC_ArryPointer;
        ENDWHILE
        !
        RETURN ;
    ERROR
        ! Placeholder for Error Code...
    ENDPROC

ENDMODULE