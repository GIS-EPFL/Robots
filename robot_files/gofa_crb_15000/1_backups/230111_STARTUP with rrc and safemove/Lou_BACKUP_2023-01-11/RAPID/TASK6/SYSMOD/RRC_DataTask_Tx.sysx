MODULE RRC_DataTask_Tx(SYSMODULE)
    !***********************************************************************************
    !
    ! ETH Zurich / Robotic Fabrication Lab
    ! HIB C 13 / Stefano-Franscini-Platz 1
    ! CH-8093 Zurich
    !
    !***********************************************************************************
    !
    ! PROJECT     :  RRC - Rapid Robot Communication
    !
    ! FUNCTION    :  Includ all Task specific Data's
    !
    ! AUTHOR      :  Philippe Fleischmann
    !
    ! EMAIL       :  rrc@arch.ethz.ch
    !
    ! HISTORY     :  2019.02.22
    !
    ! Copyright   :  ETH Zurich (CH) 2019
    !                - Philippe Fleischmann
    !                - Michael Lyrenmann
    !                - Gonzalo Casas
    !
    ! License     :  This code base is governed by an EULA (End-User License Agreement)
    !                which you have received together with the software.
    !                You are not allowed to use the software on a real robots
    !                without a signed EULA.
    !
    !                A copy of the EULA content is in the controller task (T_CTRL).
    !
    !***********************************************************************************

    !************************************************
    ! Declaration :     bool
    !************************************************
    !
    CONST bool b_RRC_Run:=TRUE;
    !
    TASK PERS bool b_RRC_PrintPrio1:=FALSE;
    !
    TASK PERS bool b_RRC_SocketActiv:=TRUE;

    !************************************************
    ! Declaration :     num
    !************************************************
    !
    CONST num n_RRC_NumOfCha:=4;
    CONST num n_RRC_SenMinData:=1;
    CONST num n_RRC_NoOfByMsgLen:=4;
    CONST num n_RRC_SenHeaderMaxSqzNrRob:=1000000;
    CONST num n_RRC_ProtocolCtrl:=1;
    CONST num n_RRC_ProtocolRob:=2;
    CONST num n_RRC_SendProtocolPerChannel:=2;
    !
    TASK PERS num n_RRC_ReadPtrSenBufRob{n_RRC_NumOfCha}:=[5,1,1,1];
    TASK PERS num n_RRC_ReadPtrSenBufCtrl{n_RRC_NumOfCha}:=[1,1,1,1];
    !
    TASK PERS num n_RRC_SenHeaderSqzNr{n_RRC_NumOfCha}:=[164,0,0,0];
    !
    TASK PERS num n_RRC_SenMsgLenRob:=60;
    !
    TASK PERS num n_RRC_TimeStamp:=501.638;
    TASK PERS num n_RRC_TimeStampSec:=501;
    TASK PERS num n_RRC_TimeStampNanoSec:=638;

    !************************************************
    ! Declaration :     string
    !************************************************
    !
    TASK PERS string st_RRC_EvLogMsgHeader:="RRC -- Sender";
    !  
    VAR string st_RRC_IP_ClientSen{n_RRC_NumOfCha}:=["","","",""];

    !************************************************
    ! Declaration :     clock
    !************************************************
    !
    VAR clock clk_RRC_TimeStamp;
    VAR clock clk_RRC_PackAndSend;

    !************************************************
    ! Declaration :     socketdev
    !************************************************
    !  
    TASK VAR socketdev sod_RRC_ServerSen{n_RRC_NumOfCha};
    TASK VAR socketdev sod_RRC_ClientSen{n_RRC_NumOfCha};

    !************************************************
    ! Declaration :     RRC_Protokol
    !************************************************
    !
    CONST RRC_Protocol proEmpty:=[[0,0,0,0],[0,0,0,"",0,0,"",0,0,0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]];
    !
    !* TASK VAR RRC_Protocol pro_RRC_ActMsgRob:=[[0,0,0,0],[0,0,0,"",0,0,"",0,0,0,"",0,"",0,"",0,"",0,"",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]];
    !
    TASK PERS RRC_Protocol pro_RRC_ActMsgSen{n_RRC_SendProtocolPerChannel,n_RRC_NumOfCha}:=[
    [[[0,0,0,0],[0,0,0,"",0,0,"",0,0,0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],
    [[0,0,0,0],[0,0,0,"",0,0,"",0,0,0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],
    [[0,0,0,0],[0,0,0,"",0,0,"",0,0,0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],
    [[0,0,0,0],[0,0,0,"",0,0,"",0,0,0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]]],

    [[[64,2,501,638],[164,0,12,"r_RRC_MoveTo",0,4,"Done",13,0,0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],
    [[0,0,0,0],[0,0,0,"",0,0,"",0,0,0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],
    [[0,0,0,0],[0,0,0,"",0,0,"",0,0,0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],
    [[0,0,0,0],[0,0,0,"",0,0,"",0,0,0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]]]];

    !************************************************
    ! Declaration :     rawbytes
    !************************************************
    !
    TASK VAR rawbytes rb_RRC_SenTempBuffer;
    TASK VAR rawbytes rb_RRC_SenBufferMsgLen;
    TASK VAR rawbytes rb_RRC_SenBuffer;

    !************************************************
    ! Declaration :     RRC_buffer_msg
    !************************************************
    !
    CONST RRC_buffer_msg bmEmpty:=[[0,0,0,"",0,0,"",0,0,0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],FALSE];

ENDMODULE